1. Так как логически на банковском счете не может быть отрицательное значение, то, во-первых, целесообразно применить тип unsined. На банковском счете хранится целое значение, поэтому применим int. 
 Тип unsigned long int хранит числа от 0 до 4 294 967 295. Этого может не хватить, что приведет к переполнению буфера и непредсказуемым результатам. Поэтому стандартом С 99 от опеределен тип unsigned long long int, принимающий 
значения от 0 до (2в степени 64)  -1
2. Для хранения числа пи удобно объявить костанту посредством процедцры define, так как препроцессор автоматически перед компиляцией заменит все все значения переменной конкретным чмслом пи. Это удобно, 
когда необходимо вносить изменения в программу, чтобы не менять вручную каждое число, а использовать макроподстановку.
3. 5%1. Ответом будет число нуль (0), так как выражение значит остаток от деления числа 5 на 1. 5 делиться на 1 без остатка, поэтому ответом служит число 0.
4. Значение выражения станет 2. Ассоциирование идет справо налево. Сначло в х присваивается 1, затем находится их разница, т.е 0, после находится косинус нуля, т.е. 1, затем вычисляется выражене х += 1, где и получается 2.
5. Если условие верно, после выполнения кода х станет равным 1, так как сначала проверяется условие, а потом происходит присвоение числа 1 в переменную х. Если условие неверно, то выполнится другая часть блока кода.
6. Цикл for выполнится 9 раз (сначала полсе инициализиции счетчик примент значение 1, затем он будет выполнятся до тех пор, пока i не примет значение 10, т.е. ложь
7.Тип float занимает 4 байта. Для опеределения необходимого количества байтов памяти для хранения массивая необходимо размер одного элемента (4 байта) умножить на количество элементов массива. 
То есть получится 4*20=80 байт.
8. Номер в среднем ( с учетом кода) представляет собой последовательность цифр и символ +. Таким образом, можно номер можно хранить как массив из char размером 10 элементов. 
Поля имени и фамилии должны содержать не менее 30 символов. Так, у нас будет три поля,  и максимальная сумма их символов будет равняться 70 символовЕго размер будет равняться 1 байт*70=70 байт. 
С учетом численности РБ (примерно 9 469 000) размер справочника будет сосотавлять 9 469 000*70 =662 830 000 байт.
9. Мы имеем массив из символов размером 1 000 000 байт. Среднее слово состоимт из 6 символов, поэтому примерное количество слов = 1 000 000/6=166 667 слов. Таким образом, обработка одного слова занимает 1 нс. В худшем случае (искомое слово находится в конце файла) 
программа займет 0,1-1 секунду.
10.Мы имеем массив из символов размером 1 000 000 байт. Среднее слово состоимт из 6 символов, поэтому примерное количество слов = 1 000 000/6=166 667 слов. Поиск наиболее встречающегося слова обязательно 
предполагает проход по всему файлу, а также определение наиболее встречающегося слова, то есть алгоритм медленнее на время нахождения частоты вхождения слов. То есть время ппрограммы составит 1,5-2 сек.
11. Другие функции можно вызывать в main, т.е в теле программы, а также при создании пользовательских классов.
12. Из-за вычислительной сложности алгоритма
13. Хорошим кодом считается тот, который извещает пользователя о всех ошибках, которые происходят в процессе выполнения программы. Поэтому при появлении ошибки логично вывести на экран текстовое сообщение
 "Ошибка при сохранении данных"
14. Ошибку можно исправить, если сделать проверку на валидность (правильность ввода). Например, при вводе имени запретить испорльзование цифр и спец. символов. 
А также можно поставить ограничение на максимально допустимое количество символов.
15. Генеалогичесое древо удобно хранить в виде структуры, которая содержит поля ФИО, дата рождения, дата смерти каждого человека. Для добавления нового члена можно обращаться к этим полям и заполнять их данными.
